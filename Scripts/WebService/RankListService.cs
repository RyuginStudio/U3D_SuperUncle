//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="RankListServiceSoap", Namespace="http://tempuri.org/")]
public partial class RankListService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback updateListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getRankListOperationCompleted;
    
    /// <remarks/>
    public RankListService() {
        this.Url = "http://47.75.2.153/RankListService.asmx";
    }
    
    /// <remarks/>
    public event updateListCompletedEventHandler updateListCompleted;
    
    /// <remarks/>
    public event getRankListCompletedEventHandler getRankListCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void updateList(string uploadData) {
        this.Invoke("updateList", new object[] {
                    uploadData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateList(string uploadData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateList", new object[] {
                    uploadData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndupdateList(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void updateListAsync(string uploadData) {
        this.updateListAsync(uploadData, null);
    }
    
    /// <remarks/>
    public void updateListAsync(string uploadData, object userState) {
        if ((this.updateListOperationCompleted == null)) {
            this.updateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateListOperationCompleted);
        }
        this.InvokeAsync("updateList", new object[] {
                    uploadData}, this.updateListOperationCompleted, userState);
    }
    
    private void OnupdateListOperationCompleted(object arg) {
        if ((this.updateListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRankList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getRankList() {
        object[] results = this.Invoke("getRankList", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRankList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRankList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetRankList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getRankListAsync() {
        this.getRankListAsync(null);
    }
    
    /// <remarks/>
    public void getRankListAsync(object userState) {
        if ((this.getRankListOperationCompleted == null)) {
            this.getRankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRankListOperationCompleted);
        }
        this.InvokeAsync("getRankList", new object[0], this.getRankListOperationCompleted, userState);
    }
    
    private void OngetRankListOperationCompleted(object arg) {
        if ((this.getRankListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getRankListCompleted(this, new getRankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void updateListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getRankListCompletedEventHandler(object sender, getRankListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getRankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getRankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
